USE CASE DIAGRAM
@startuml
left to right direction
actor "User" as fc
actor "Sonda" as sc
actor "Alarm" as ac
actor "Electric Company" as ec
actor "Power Inverter" as dc

rectangle System {
  usecase "Energy production and consumption display" as UC2
  usecase "Connect/disconnect panel." as UC1
  usecase "Solar panel energy calculation" as UC3
  usecase "Electric network energy calculation" as UC4
  usecase "Warning generation" as UC5
  usecase "Emergency system disconnect button" as UC6
  usecase "Calculate savings" as UC7
  usecase "On/Off racking" as UC8
  usecase "Current activation status" as UC9
  usecase "Energy sent to electric network percentage calculation" as UC11
  usecase "Performance tracking" as UC12
  (UC3) .> (UC11) : include
  (UC3) .> (UC12) : include

}
fc --> UC1
dc -up-> UC1
fc <-- UC2
sc -up-> UC3
ec -up-> UC4
sc -up-> UC5
fc --> UC5
ac --> UC6
dc -up-> UC6
fc --> UC7
ec -up-> UC7
fc --> UC8
sc -up-> UC8
fc --> UC9
sc -up-> UC9
@enduml
_____________________________________________________________________________________________________________________________________
ACTIVITY DIAGRAMS
A1.Interactions between users-application
code:
@startuml
title A1.Interactions between users-web/application
(*) --> "Access to the Web/APP" as Access
     if "Have account?" then
       -->[No] "Display Sign up screen"
       --> "Fill create account form"
       --> "Validate e-mail"
       --> "Send verification"
        if "" then
          -->[No successful] "Resend verification"
           if "" then
             -->[No successful (3 times)] "ERROR"
             --> Access
           else
             -->[Successful] "Validate phone number" as number
           endif
        else
          -->[Successful] number
          --> "Send SMS verification" as Verification
           if "" then
             -->[No successful] "Resend SMS verification"
              if "" then 
                -->[No succesful (3 times)] "ERROR"
              else
                -->[Successful] "Display Home screen" as Home
                endif
           else 
             -->[Successful] Home
             --> "Choose windows"
           endif
              if "" then
                -->[ON/OFF] "Click turn ON/OFF window"
                --> "A1.1"
                --> ===B1===
              else
                -->[Statistics] "Click Statistics(Production,consumption,efficiency and money saved) window"
                -->"A1.2"
                --> ===B1===
                -->(*)
              endif
              endif
     else
       -->[Yes] "Display Log in screen"
       --> "Check account"
       --> "Enter password"
        if "" then
          -->[No successful] "Forgot password"
          --> Verification
        else
          -->[Successful] Home
@enduml
------------------------------------------------------------------------------------------------------------------------------------------------------
A1.1 Turn ON/OFF (Application)
code:
@startuml
title A1.1 Turn ON/OFF through Web/Application
(*) --> "Log in/Sign up"
    note right: This action need to be verified previously using A1 diagram
    --> "Display Home screen" as home
    --> "Select the Turn On/Off window"
    --> "Click on the botton of ON/OFF" as botton
     if "" then
       -->[ON] "Turn ON" 
       --> ==B1== 
       if "There is an error?" then
         -->[Yes] "Restart the Web/APP"
         if "Is the error resolved?" then
           --> [No] "Call technical support"
           --> "Exit Web/APP" as exit
           -->(*)
         else
           --> [Yes] exit
         endif
       else
         -->[No] exit
       endif
     else 
       -->[OFF] "Turn OFF"
       --> ==B1==
     endif
@enduml
---------------------------------------------------------------------------------------------------------------------------------------------
A1.2 Statistical data query
code:
@startuml
title A1.2 Statistical data query
(*) --> "Log in/Sign up"
    note right: This action need to be verified previously using A1 diagram
    --> " Display Home screen" as home
    --> "Click on the Statistics window"
    --> "Select the type of data: Production,Consumption,Efficiency,Status of the panel, Hours of panel turn on/off or Saved money"
    --> "Access to the selected data"    
     if "There is an error?" then
       -->[Yes] "Restart the WebAPP"
       if "Error resolved?" then
         --> [No] "Call technical support"
         --> "Exit APP" as exit
         -->(*)
       else 
         -->[Yes] "Take a look of the data" as data
       endif
     else 
       -->[No] data
       --> exit
     endif
@enduml
------------------------------------------------------------------------------------------------------------------------------------------------
A2. Turn ON/OFF by the system
code:
@startuml
title A2.Turn ON/OFF by the system
(*) --> "Check safety status of the panel (fire)"
  if "" then
    -->[Yes] "TURN OFF" as off
    --> ===B1===
  else 
    -->[No] "Check Battery status"
    if "" then
      -->[Battery>80%] off
    else 
      -->[Battery<80%] "Check consumption vs production balance"
      if "" then
        -->[Consumption<Production] off
      else
        -->[Consumption>Production] "Check panel efficiency"
        if "" then
          -->[<40%] off
        else
          -->[>40%] "TURN ON"
          --> ===B1===
          --> (*)
@enduml
____________________________________________________________________________________________________________________________________
SEQUENCE DIAGRAMS
S1: Sign up to the APP
code:
@startuml
title S1: Sign up to the APP
actor Customer
participant WebAPP
participant CentralServer

Customer-> WebAPP: Click on Sign up botton
activate WebAPP
activate Customer 
Customer->WebAPP: Fill registration form
deactivate Customer
activate CentralServer
WebAPP->CentralServer: Save information
WebAPP->CentralServer: Create account
activate Customer
WebAPP -> Customer: Verify account e-mail
WebAPP -> CentralServer: Request e-mail verification 
CentralServer -> CommunicationCompany: Request e-mail verification 
activate CommunicationCompany
deactivate WebAPP
deactivate CentralServer
CommunicationCompany -> Customer: Send e-mail verification
Customer -> CentralServer: Verify e-mail successfully
activate CentralServer
activate WebAPP
WebAPP -> Customer: Message "E-mail verified successfully "
WebAPP -> Customer: Verify account phone number
WebAPP -> CentralServer: Request SMS verification to the customer
deactivate WebAPP
CentralServer -> CommunicationCompany: request SMS verification
deactivate CentralServer
CommunicationCompany -> Customer: Send SMS verification
activate CentralServer
Customer -> CentralServer: Verify phone number successfully
activate WebAPP
deactivate CentralServer
WebAPP -> Customer: Message "Phone number verified successfully "
WebAPP -> Customer: Message "Your account was create successfully"
Customer -> WebAPP: Click on the Home screen
deactivate WebAPP
Deactivate Customer
@enduml
--------------------------------------------------------------------------------------------------------------------------------------------------
S2: Log in APP
code:
@startuml
title S2: Log in Web/APP
actor Customer
participant WebAPP
participant CentralServer

Customer -> WebAPP: Log in account
activate WebAPP
activate Customer
WebAPP -> Customer: Request Password
Customer -> WebAPP: Enter password
WebAPP -> CentralServer: Verify password
activate CentralServer
return ok
WebAPP -> Customer: Log in successful
Customer ->WebAPP: Click on the home screen
deactivate WebAPP
deactivate Customer
@enduml
---------------------------------------------------------------------------------------------------------------------------------------------------
S3: Turn ON/OFF through Web/APP
code:
@startuml
title S3: Turn ON/OFF through WebAPP
actor Customer
participant WebAPP
participant CentralServer

activate Customer
activate WebAPP
Customer -> WebAPP: Log in/ sign up account
Customer -> WebAPP: Click on the Home screen
Customer -> WebAPP: Click on the ON/OFF window
WebAPP -> CentralServer: Request permission
CentralServer -->WebAPP: ok
deactivate CentralServer
WebAPP -> Customer: Permission to turn ON/OFF
deactivate Customer
deactivate WebAPP
@enduml
-----------------------------------------------------------------------------------------------------------------------------------------------------
S4: Access to the statistics of the panel through Web/APP
code:
@startuml
title S4: Access to the Statistics of the panel through Web-APP
actor Customer
participant WebAPP
participant CentralServer

activate Customer
activate WebAPP
Customer -> WebAPP: Log in/ sign up account
Customer -> WebAPP: Click on the Home screen
Customer -> WebAPP: Click on the Statistics window
Customer -> WebAPP: Select the type of data: Production,Consumption,Efficiency,Status of the panel, Hours of panel turn on/off or Saved money
WebAPP -> CentralServer: Request permission
CentralServer -->WebAPP: ok
deactivate CentralServer
WebAPP -> Customer: Permission to access selected statistics
deactivate Customer
deactivate WebAPP
@enduml
-----------------------------------------------------------------------------------------------------------------------------------------------------
S5: Turn ON/OFF automatically
code:
@startuml
title S5: Turn ON/OFF by the system
actor Customer
participant WebAPP
participant CentralControl

WebAPP ->  CentralControl: Check safety status (fire)
activate WebAPP
activate  CentralControl
WebAPP ->  CentralControl: Check battery status
WebAPP ->  CentralControl: Check consumption vs production balance
WebAPP ->  CentralControl: Check efficiency
CentralControl --> WebAPP: TURN ON/OFF (according to the requirements)
activate Customer
WebAPP -> Customer: Message "The Panel Solar was turn ON/OFF to maximize self-consumption"
deactivate Customer
deactivateWebAPP
deactivate CentralControl
@enduml

__________________________________________________________________________________________________________________
CLASS DIAGRAM
code:

@startuml
!theme mars
namespace system.WebServer {

class PublicServerEntrance{
 + CONST: ReceiveData
 + sendData(data:string): string
}

class WebServerManager{
  - mainLogger: Logger
  + GetLogger(): Logger
  + LogWarning(text: string)
  + LogError(text: string)
  + logData(data: string): void
  + configurateServer()
  + enableConnection()
}

class Computations{
  + CONST: CalculateTime
  + energyMean() : int
  + questionDB()
  + responseDB()
  + sendDataWebServerManager()
  + MoneySaved(): float
  + MoneySentElectricGrid(): float
  + OverallConsumptionMonth(): float
  + OverallProductionMonth(): float
}

class UserInterface {
  + displayInfo(): void
  + performAction(action: string): void
}

class Database {
  + saveData(data: string): void
  + getID(): float
}
}

namespace system.MonitoringDevice {

class PanelController {
  + getID(): float
  + activatePanel(): void
  + deactivatePanel(): void
}
class Battery {
  - capacity: float
  - current_charge: float
  - status: boolean
  + chargeBattery(amount: float): void
  + dischargeBattery(amount: float): void
  + calculate_currentBatery(amount: float): void
  + updateStatus(): void
}
class ElectricSensor {
  - voltage : float
  + getElectricData(): float
  - status: boolean
  + updateStatus(): void

}
class FireDetector {
  + detectFire(): void
  + updateStatus(): void
  - status: boolean
}
class DataGather {
  + receiveElectricData(data: ElectricData): void
  + receiveDustData(data: DustData): void
  + receiveFireAlarmData(alarm: FireAlarmData): void
  + receiveBatteryData(data: BatteryData): void
  + CONST: Pulltime
}
class MonitoringDevice {
  - ID: float
}

class EnergyHistory{
  - production: float
  + updateProduction(amount: float): void
  - consumption: float
  + updateConsumption(amount: float): void
  + CONST : SendTime
  + CONST : SaveTime

}

class ServerProxy{
  + CONST : SendTime
  + pullData(): string
  + sendData(): string
}

class DustDetector {
  + detectDust(): void
  - status: boolean
  + updateStatus(): void
}
DataGather "1" --* "1" MonitoringDevice  : composition
DataGather "1" --* "1" EnergyHistory : composition
EnergyHistory "1" --o "1" MonitoringDevice
DustDetector "*" <--o "1" DataGather : aggregation
MonitoringDevice "1" *-- "1" PanelController : composition
FireDetector "*" <--o "1" DataGather : aggregation
PanelController "1" ..> "1" DataGather : informs
PanelController "1" ..> "1" EnergyHistory
Battery "*" <--o "1" DataGather : aggregation
ElectricSensor "1" <--o "1" DataGather : aggregation
PanelController "1" <.. "1" ServerProxy
PublicServerEntrance "1" ..> "1" ServerProxy
PublicServerEntrance "1" -.-> "1" Database: send info
WebServerManager "1" o--> "1" UserInterface : aggregation
WebServerManager "1" o-- "1" Database : aggregation
WebServerManager "1" o-- "1" Computations : aggregation
PublicServerEntrance "1" --* "1" WebServerManager
}
@enduml


